<span class="category">Addons</span>
<h1>CSS Sass Transpiler</h1>

<p>
  WinnetouJs believes in the strength of sass, so it already brings with it an onboard SASS transpiler. But that doesn't make you obliged to use sass, css can be used normally.

</p>

<p>
  You can separate your project into several sass (or css) files so that the transpiler will bring them all together in a single bundle ./release/winnetouBundle.min.css.

</p>

<h2>Setting up</h2>
<p>
  You must use win.config.js to configure the input folders for the .scss and .css files and the output folders for the transpiled version. The <code>sass</code> parameter is an array of objects that can contain the following properties: <code>entryFolder</code>, <code>outFolder</code> and <code>firstFile</code>. Use firstFile to determine a sass file to be transpiled before the rest of the folder.
</p>

<div class="codeOutput">
  <span class="code-file-name">win.config.js</span>
  <pre><code class="onloadCode">

...
sass: [
  {
      entryFolder: "./sass",
      outFolder: "./release",
      firstFile:'base.scss'
  },
  {
      entryFolder: "./sass_mobile",
      outFolder: "./release_mobile",
      firstFile:'base.scss'
  },
],
...

       
      </code></pre>
</div>

<h2>Transpiling</h2>
<p>
  To transpile your sass into css, just run <code>node wbr --bundleRelease</code> in your terminal. Then, import the generated min.css into your html.</p>

<div class="codeOutput">
  <span class="code-file-name">index.html</span>
  <pre><code class="onloadCode">

  ...
    
  &lt;link rel=&quot;stylesheet&quot; href=&quot;/release/winnetouBundle.min.css&quot; /&gt;
&lt;/head&gt;
&lt;body&gt;
  ...
  &lt;script src=&quot;/release/winnetouBundle.min.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
       
      </code></pre>
</div>

<p>
  Remember, WinnetouJs will never mix html, css and javascript codes together.
</p>




<%- include('../template/footer.ejs',{text:'SVG Icons',url:'/docs/svg-icons'}) %>